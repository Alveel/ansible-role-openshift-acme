apiVersion: v1
kind: Template
metadata:
  name: acme-controller
parameters:
- description: Target namespace
  name: NAMESPACE
  value: acme-controller
- description: ACME Endpoint URL
  name: OPENSHIFT_ACME_ACMEURL
  value: https://acme-staging.api.letsencrypt.org/directory
- description: Controller loglevel
  name: OPENSHIFT_ACME_LOGLEVEL
  value: "8"
- description: Docker Image of ACME controller
  name: DOCKER_IMAGE
  value: docker.io/tnozicka/openshift-acme
- description: Docker Image Tag of ACME controller
  name: DOCKER_IMAGE_TAG
  value: latest
- name: REPLICA_COUNT
  value: "1"

objects:
- apiVersion: v1
  kind: ClusterRole
  metadata:
    name: acme-controller
    namespace: ${NAMESPACE}
    labels:
      app: acme-controller
  rules:
  - apiGroups:
    - "route.openshift.io"
    resources:
    - routes
    - routes/finalizers
    verbs:
    - create
    - get
    - list
    - watch
    - update
    - patch
    - delete
  
  - apiGroups:
    - "route.openshift.io"
    resources:
    - routes/custom-host
    verbs:
    - create
    - update
    - delete
    - patch
  
  - apiGroups:
    - ""
    resources:
    - events
    verbs:
    - create
    - update
    - patch
  
  - apiGroups:
    - ""
    resources:
    - endpoints
    - endpoints/restricted
    - services
    verbs:
    - create
    - get
    - list
    - watch
    - update
    - patch
    - delete
  
  - apiGroups:
    - ""
    resources:
    - secrets
    - secrets/finalizers
    verbs:
    - create
    - get
    - list
    - watch
    - update
    - patch
    - delete

- apiVersion: apps/v1beta1
  kind: Deployment
  metadata:
    name: acme-controller
    namespace: ${NAMESPACE}
    labels:
      app: acme-controller
    annotations:
      image.alpha.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"acme-controller:latest"},"fieldPath":"spec.template.spec.containers[0].image"}]'
      image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"acme-controller:latest"},"fieldPath":"spec.template.spec.containers[?(@.name==\"acme-controller\")].image"}]'
  spec:
    replicas: ${REPLICA_COUNT}
    strategy:
      type: Recreate
    template:
      metadata:
        labels:
          app: acme-controller
      spec:
        serviceAccountName: acme-controller
        containers:
        - name: acme-controller
          image: " "
          imagePullPolicy: Always
          ports:
          - containerPort: 5000
          env:
          - name: OPENSHIFT_ACME_EXPOSER_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: OPENSHIFT_ACME_ACMEURL
            value: ${OPENSHIFT_ACME_ACMEURL}
          - name: OPENSHIFT_ACME_LOGLEVEL
            value: ${OPENSHIFT_ACME_LOGLEVEL}
          - name: REPLICA_COUNT
            value: ${REPLICA_COUNT}
  
- apiVersion: v1
  kind: ImageStream
  metadata:
    name: acme-controller
    namespace: ${NAMESPACE}
    labels:
      app: acme-controller
  spec:
    tags:
    - name: latest
      from:
        kind: DockerImage
        name: ${DOCKER_IMAGE}:${DOCKER_IMAGE_TAG}
      importPolicy:
        scheduled: true

- apiVersion: v1
  kind: ServiceAccount
  metadata:
    name: acme-controller
    namespace: ${NAMESPACE}
    labels:
      app: acme-controller

- apiVersion: v1
  kind: ClusterRoleBinding
  metadata:
    name: acme-controller
  roleRef:
    name: acme-controller
  subjects:
  - kind: ServiceAccount
    name: acme-controller
    namespace: ${NAMESPACE}

